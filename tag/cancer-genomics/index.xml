<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cancer Genomics | seandavi(s12)</title>
    <link>/tag/cancer-genomics/</link>
      <atom:link href="/tag/cancer-genomics/index.xml" rel="self" type="application/rss+xml" />
    <description>Cancer Genomics</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 25 Mar 2018 11:18:36 -0400</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Cancer Genomics</title>
      <link>/tag/cancer-genomics/</link>
    </image>
    
    <item>
      <title>Extracting Clinical Information Using the Genomicdatacommons Package</title>
      <link>/post/2018-03-25-extracting-clinical-information-using-the-genomicdatacommons-package/</link>
      <pubDate>Sun, 25 Mar 2018 11:18:36 -0400</pubDate>
      <guid>/post/2018-03-25-extracting-clinical-information-using-the-genomicdatacommons-package/</guid>
      <description>


&lt;p&gt;This short post introducds the &lt;code&gt;gdc_clinical()&lt;/code&gt; function recently
added to the GenomicDataCommons package.&lt;/p&gt;
&lt;p&gt;The
&lt;a href=&#34;https://gdc.cancer.gov/developers/gdc-data-model&#34;&gt;rich data model&lt;/a&gt; at
the NCI Genomic Data Commons (GDC) includes clinical and biospecimen
details. A recently added feature to the NCI GDC Data Portal is the
ability to download tab-delimited files or JSON files for clinical and
biospecimen details of samples. The details available in these
simplified formats are also available via the GDC API.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(GenomicDataCommons)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The clinical
infomation at the GDC is encapsulated in the &lt;code&gt;cases&lt;/code&gt; records. Here, I
introduce the &lt;code&gt;gdc_clinical()&lt;/code&gt; function from
the
&lt;a href=&#34;https://bioconductor.org/packages/GenomicDataCommons&#34;&gt;GenomicDataCommons&lt;/a&gt; package that
takes as input
GDC case IDs and returns a set of four related &lt;code&gt;data.frame&lt;/code&gt;s:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;main: important case metadata&lt;/li&gt;
&lt;li&gt;demographics: basic demographic information&lt;/li&gt;
&lt;li&gt;exposures: zero or more documented exposures&lt;/li&gt;
&lt;li&gt;diagnoses: zero or more diagnoses per case&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example application, we will examine the clinical details for
100 lung adenocarcinoma patients from TCGA (“TCGA-LUAD”). The case ids
are available through a basic &lt;code&gt;cases()&lt;/code&gt; query, &lt;code&gt;filter&lt;/code&gt;ed to include
only samples that belong to the project from &lt;code&gt;TCGA-LUAD&lt;/code&gt; (stored in
the &lt;code&gt;project.project_id&lt;/code&gt; field). The query to get these case_ids,
then, looks like:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;case_ids = cases() %&amp;gt;%
    filter(~ project.project_id == &amp;#39;TCGA-LUAD&amp;#39;) %&amp;gt;%
    results(size=100) %&amp;gt;%
    ids()
head(case_ids)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;645903b5-ba37-48a1-985b-a019b8db3236&amp;quot;
## [2] &amp;quot;9e640ff7-996e-427b-b56c-519a1e23baab&amp;quot;
## [3] &amp;quot;0232d299-4cdf-4fd7-9a5e-8d13c208b40c&amp;quot;
## [4] &amp;quot;15340dd3-84ae-49fb-989a-eb212f3e73da&amp;quot;
## [5] &amp;quot;474b86d9-d897-467d-85d4-51dfa26ea107&amp;quot;
## [6] &amp;quot;e254aaeb-012c-4d92-8a03-cce1f6a2bcd6&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These case_ids, each representing a single case (patient) in the GDC,
can be be fed directly to &lt;code&gt;gdc_clinical&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clin_res = gdc_clinical(case_ids)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The result is a list of data.frames:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(clin_res)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;demographic&amp;quot; &amp;quot;diagnoses&amp;quot;   &amp;quot;exposures&amp;quot;   &amp;quot;main&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The the dimensions of these data.frames is instructive.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sapply(clin_res, dim) %&amp;gt;%
    t() %&amp;gt;%
    data.frame() %&amp;gt;%
    set_names(c(&amp;#39;rows&amp;#39;,&amp;#39;columns&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##             rows columns
## demographic  100      15
## diagnoses     83      30
## exposures     83      14
## main         100       8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the column names for each are helpful to examine:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sapply(clin_res, colnames)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $demographic
##  [1] &amp;quot;updated_datetime&amp;quot; &amp;quot;created_datetime&amp;quot; &amp;quot;gender&amp;quot;          
##  [4] &amp;quot;year_of_birth&amp;quot;    &amp;quot;demographic_id&amp;quot;   &amp;quot;state&amp;quot;           
##  [7] &amp;quot;race&amp;quot;             &amp;quot;age_at_index&amp;quot;     &amp;quot;vital_status&amp;quot;    
## [10] &amp;quot;submitter_id&amp;quot;     &amp;quot;ethnicity&amp;quot;        &amp;quot;year_of_death&amp;quot;   
## [13] &amp;quot;days_to_birth&amp;quot;    &amp;quot;days_to_death&amp;quot;    &amp;quot;case_id&amp;quot;         
## 
## $diagnoses
##  [1] &amp;quot;case_id&amp;quot;                          
##  [2] &amp;quot;year_of_diagnosis&amp;quot;                
##  [3] &amp;quot;classification_of_tumor&amp;quot;          
##  [4] &amp;quot;last_known_disease_status&amp;quot;        
##  [5] &amp;quot;updated_datetime&amp;quot;                 
##  [6] &amp;quot;primary_diagnosis&amp;quot;                
##  [7] &amp;quot;submitter_id&amp;quot;                     
##  [8] &amp;quot;tumor_stage&amp;quot;                      
##  [9] &amp;quot;age_at_diagnosis&amp;quot;                 
## [10] &amp;quot;morphology&amp;quot;                       
## [11] &amp;quot;days_to_last_known_disease_status&amp;quot;
## [12] &amp;quot;created_datetime&amp;quot;                 
## [13] &amp;quot;prior_treatment&amp;quot;                  
## [14] &amp;quot;ajcc_pathologic_n&amp;quot;                
## [15] &amp;quot;ajcc_pathologic_m&amp;quot;                
## [16] &amp;quot;state&amp;quot;                            
## [17] &amp;quot;days_to_last_follow_up&amp;quot;           
## [18] &amp;quot;days_to_recurrence&amp;quot;               
## [19] &amp;quot;diagnosis_id&amp;quot;                     
## [20] &amp;quot;tumor_grade&amp;quot;                      
## [21] &amp;quot;icd_10_code&amp;quot;                      
## [22] &amp;quot;tissue_or_organ_of_origin&amp;quot;        
## [23] &amp;quot;progression_or_recurrence&amp;quot;        
## [24] &amp;quot;prior_malignancy&amp;quot;                 
## [25] &amp;quot;ajcc_staging_system_edition&amp;quot;      
## [26] &amp;quot;ajcc_pathologic_stage&amp;quot;            
## [27] &amp;quot;synchronous_malignancy&amp;quot;           
## [28] &amp;quot;site_of_resection_or_biopsy&amp;quot;      
## [29] &amp;quot;ajcc_pathologic_t&amp;quot;                
## [30] &amp;quot;days_to_diagnosis&amp;quot;                
## 
## $exposures
##  [1] &amp;quot;case_id&amp;quot;            &amp;quot;cigarettes_per_day&amp;quot; &amp;quot;weight&amp;quot;            
##  [4] &amp;quot;updated_datetime&amp;quot;   &amp;quot;created_datetime&amp;quot;   &amp;quot;alcohol_intensity&amp;quot; 
##  [7] &amp;quot;bmi&amp;quot;                &amp;quot;years_smoked&amp;quot;       &amp;quot;submitter_id&amp;quot;      
## [10] &amp;quot;alcohol_history&amp;quot;    &amp;quot;state&amp;quot;              &amp;quot;exposure_id&amp;quot;       
## [13] &amp;quot;height&amp;quot;             &amp;quot;pack_years_smoked&amp;quot; 
## 
## $main
## [1] &amp;quot;updated_datetime&amp;quot; &amp;quot;submitter_id&amp;quot;     &amp;quot;case_id&amp;quot;         
## [4] &amp;quot;id&amp;quot;               &amp;quot;disease_type&amp;quot;     &amp;quot;created_datetime&amp;quot;
## [7] &amp;quot;state&amp;quot;            &amp;quot;primary_site&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the each data.frame contains a &lt;code&gt;case_id&lt;/code&gt; column by design to
allow arbitrary joining of the tables to each other. In this case, the
data relationships are not too complicated, but one might imagine
situations arising that include many-to-many relationships that are
hard to handle in a fully general way without some understanding of
downstream use (what do we want to do with the clinical
information?). In this relatively simple case, we can create a
“master” data.frame by joining all the records from each data.frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
full_clin = with(clin_res,
     main %&amp;gt;%
     left_join(demographic, by = &amp;quot;case_id&amp;quot;) %&amp;gt;%
     left_join(exposures, by = &amp;quot;case_id&amp;quot;) %&amp;gt;%
     left_join(diagnoses, by = &amp;quot;case_id&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Above, I have used the tidyverse approach, applying &lt;code&gt;dplyr&lt;/code&gt;
&lt;code&gt;left_join()&lt;/code&gt;s. Using base R &lt;code&gt;merge&lt;/code&gt; would also work.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(full_clin)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 100  64&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colnames(full_clin)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;updated_datetime.x&amp;quot;               
##  [2] &amp;quot;submitter_id.x&amp;quot;                   
##  [3] &amp;quot;case_id&amp;quot;                          
##  [4] &amp;quot;id&amp;quot;                               
##  [5] &amp;quot;disease_type&amp;quot;                     
##  [6] &amp;quot;created_datetime.x&amp;quot;               
##  [7] &amp;quot;state.x&amp;quot;                          
##  [8] &amp;quot;primary_site&amp;quot;                     
##  [9] &amp;quot;updated_datetime.y&amp;quot;               
## [10] &amp;quot;created_datetime.y&amp;quot;               
## [11] &amp;quot;gender&amp;quot;                           
## [12] &amp;quot;year_of_birth&amp;quot;                    
## [13] &amp;quot;demographic_id&amp;quot;                   
## [14] &amp;quot;state.y&amp;quot;                          
## [15] &amp;quot;race&amp;quot;                             
## [16] &amp;quot;age_at_index&amp;quot;                     
## [17] &amp;quot;vital_status&amp;quot;                     
## [18] &amp;quot;submitter_id.y&amp;quot;                   
## [19] &amp;quot;ethnicity&amp;quot;                        
## [20] &amp;quot;year_of_death&amp;quot;                    
## [21] &amp;quot;days_to_birth&amp;quot;                    
## [22] &amp;quot;days_to_death&amp;quot;                    
## [23] &amp;quot;cigarettes_per_day&amp;quot;               
## [24] &amp;quot;weight&amp;quot;                           
## [25] &amp;quot;updated_datetime.x.x&amp;quot;             
## [26] &amp;quot;created_datetime.x.x&amp;quot;             
## [27] &amp;quot;alcohol_intensity&amp;quot;                
## [28] &amp;quot;bmi&amp;quot;                              
## [29] &amp;quot;years_smoked&amp;quot;                     
## [30] &amp;quot;submitter_id.x.x&amp;quot;                 
## [31] &amp;quot;alcohol_history&amp;quot;                  
## [32] &amp;quot;state.x.x&amp;quot;                        
## [33] &amp;quot;exposure_id&amp;quot;                      
## [34] &amp;quot;height&amp;quot;                           
## [35] &amp;quot;pack_years_smoked&amp;quot;                
## [36] &amp;quot;year_of_diagnosis&amp;quot;                
## [37] &amp;quot;classification_of_tumor&amp;quot;          
## [38] &amp;quot;last_known_disease_status&amp;quot;        
## [39] &amp;quot;updated_datetime.y.y&amp;quot;             
## [40] &amp;quot;primary_diagnosis&amp;quot;                
## [41] &amp;quot;submitter_id.y.y&amp;quot;                 
## [42] &amp;quot;tumor_stage&amp;quot;                      
## [43] &amp;quot;age_at_diagnosis&amp;quot;                 
## [44] &amp;quot;morphology&amp;quot;                       
## [45] &amp;quot;days_to_last_known_disease_status&amp;quot;
## [46] &amp;quot;created_datetime.y.y&amp;quot;             
## [47] &amp;quot;prior_treatment&amp;quot;                  
## [48] &amp;quot;ajcc_pathologic_n&amp;quot;                
## [49] &amp;quot;ajcc_pathologic_m&amp;quot;                
## [50] &amp;quot;state.y.y&amp;quot;                        
## [51] &amp;quot;days_to_last_follow_up&amp;quot;           
## [52] &amp;quot;days_to_recurrence&amp;quot;               
## [53] &amp;quot;diagnosis_id&amp;quot;                     
## [54] &amp;quot;tumor_grade&amp;quot;                      
## [55] &amp;quot;icd_10_code&amp;quot;                      
## [56] &amp;quot;tissue_or_organ_of_origin&amp;quot;        
## [57] &amp;quot;progression_or_recurrence&amp;quot;        
## [58] &amp;quot;prior_malignancy&amp;quot;                 
## [59] &amp;quot;ajcc_staging_system_edition&amp;quot;      
## [60] &amp;quot;ajcc_pathologic_stage&amp;quot;            
## [61] &amp;quot;synchronous_malignancy&amp;quot;           
## [62] &amp;quot;site_of_resection_or_biopsy&amp;quot;      
## [63] &amp;quot;ajcc_pathologic_t&amp;quot;                
## [64] &amp;quot;days_to_diagnosis&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In conclusion, the &lt;code&gt;gdc_clinical&lt;/code&gt; functionality from the
GenomicDataCommons is a high-level function for capturing unified and
harmonized clinical information for &lt;em&gt;any&lt;/em&gt; case in the NCI GDC
repository.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sessionInfo()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R Under development (unstable) (2019-01-14 r75992)
## Platform: x86_64-apple-darwin15.6.0 (64-bit)
## Running under: macOS Mojave 10.14.2
## 
## Matrix products: default
## BLAS: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
## LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib
## 
## locale:
## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] dplyr_0.8.1              GenomicDataCommons_1.9.0
## [3] magrittr_1.5             knitr_1.23              
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_1.0.1                  pillar_1.4.2               
##  [3] compiler_3.6.0              GenomeInfoDb_1.21.1        
##  [5] XVector_0.25.0              bitops_1.0-6               
##  [7] tools_3.6.0                 zlibbioc_1.31.0            
##  [9] digest_0.6.19               jsonlite_1.6               
## [11] evaluate_0.14               tibble_2.1.3               
## [13] lattice_0.20-38             pkgconfig_2.0.2            
## [15] rlang_0.4.0                 Matrix_1.2-17              
## [17] DelayedArray_0.11.2         curl_3.3                   
## [19] yaml_2.2.0                  parallel_3.6.0             
## [21] blogdown_0.16               xfun_0.8                   
## [23] GenomeInfoDbData_1.2.1      xml2_1.2.0                 
## [25] httr_1.4.0                  stringr_1.4.0              
## [27] hms_0.4.2                   rappdirs_0.3.1             
## [29] S4Vectors_0.23.17           IRanges_2.19.10            
## [31] tidyselect_0.2.5            stats4_3.6.0               
## [33] grid_3.6.0                  glue_1.3.1                 
## [35] Biobase_2.45.0              R6_2.4.0                   
## [37] BiocParallel_1.19.0         rmarkdown_1.13             
## [39] bookdown_0.11               readr_1.3.1                
## [41] purrr_0.3.2                 codetools_0.2-16           
## [43] htmltools_0.3.6             matrixStats_0.54.0         
## [45] BiocGenerics_0.31.4         GenomicRanges_1.37.14      
## [47] assertthat_0.2.1            SummarizedExperiment_1.15.5
## [49] stringi_1.4.3               RCurl_1.95-4.12            
## [51] crayon_1.3.4&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Leveraging Bioconductor for somatic variant analysis of TCGA data</title>
      <link>/post/leveraging-bioconductor-for-somatic-variant-analysis-of-tcga-datarmd/</link>
      <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/post/leveraging-bioconductor-for-somatic-variant-analysis-of-tcga-datarmd/</guid>
      <description>


&lt;p&gt;The &lt;a href=&#34;https://gdc.cancer.gov&#34;&gt;NCI Genomic Data Commons (GDC)&lt;/a&gt; now contains the authoritative
source of data from The Cancer Genome Atlas (TCGA) as well as several
other projects of import to the cancer research community. One of the
available assays produces somatic variant calls, formally identified
by comparing tumor reads and normal reads to identify variants
relative to the human reference genome that are not present in the
normal genome of the patient. Unfortunately, this process for
discovering these variants is less precise relative to finding
germline variants. Because a gold standard bioinformatics approach for
somatic variant calling has not been identified, the GDC runs four
separate pipelines and has two levels of data for each. This post
demonstrates the use of the Bioconductor &lt;a href=&#34;https://bioconductor.org/packages/GenomicDataCommons&#34;&gt;GenomicDataCommons package&lt;/a&gt;
to identify and then fetch somatic variant results from the NCI GDC
and then provide a high-level assessment of those variants using the
&lt;a href=&#34;https://bioconductor.org/packages/maftools&#34;&gt;maftools package&lt;/a&gt;. The workflow will be:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Install packages if not already installed&lt;/li&gt;
&lt;li&gt;Load libraries&lt;/li&gt;
&lt;li&gt;Identify and download somatic variants for a representative TCGA
dataset, in this case cutaneous melanoma.&lt;/li&gt;
&lt;li&gt;Use maftools to provide rich summaries of the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Identifying appropriate resources at the GDC starts with a bit of
browsing on the website or with equivalent browsing using one of the
GenomicDataCommons introspection functions, &lt;code&gt;available_fields()&lt;/code&gt; and
&lt;code&gt;available_values()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To work through these code examples, the maftools and
GenomicDataCommons packages must first be installed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;source(&amp;quot;https://bioconductor.org/biocLite.R&amp;quot;)
biocLite(c(&amp;quot;GenomicDataCommons&amp;quot;, &amp;quot;maftools&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once installed, load the packages, as usual.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(GenomicDataCommons)
library(maftools)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The data model (how data are described and linked to each other) is
quite complicated, but documentation is available. In general, though,
linking Bioconductor tools to data involves finding files that meet
some criteria. Each file in the GDC is identified by a “UUID” that
carries no meaning other than it is unique. TCGA barcodes are not
&lt;em&gt;directly&lt;/em&gt; used for identifying files, though filtering files by TCGA
barcodes is possible (and not shown here). So, the first step is to
find barcodes associated with a [MAF format file] for TCGA project
“TCGA-SKCM”. Searching based on &lt;code&gt;data_type&lt;/code&gt;, &lt;code&gt;data_format&lt;/code&gt;, and
&lt;code&gt;analysis.workflow_type&lt;/code&gt; will limit results to the file of interest,
namely the &lt;a href=&#34;https://docs.gdc.cancer.gov/Data_Dictionary/viewer/#?view=table-definition-view&amp;amp;id=somatic_aggregation_workflow&amp;amp;_top=1&#34;&gt;MuTect2 workflow&lt;/a&gt; variant calls, converted to MAF format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;uuids = files() %&amp;gt;% 
    GenomicDataCommons::filter(~ cases.project.project_id==&amp;#39;TCGA-SKCM&amp;#39; &amp;amp; 
        data_type==&amp;#39;Masked Somatic Mutation&amp;#39; &amp;amp;
        data_format==&amp;#39;MAF&amp;#39; &amp;amp;
        analysis.workflow_type==&amp;#39;MuTect2 Variant Aggregation and Masking&amp;#39;) %&amp;gt;%
    ids()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the uuids have been identified (in this case, only 4b7a5729-b83e-4837-9b61-a6002dce1c0a),
the &lt;code&gt;gdcdata()&lt;/code&gt; function downloads the associated files and returns a
filename for each uuid.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;maffile = gdcdata(uuids)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The MAF file is now stored locally and the &lt;a href=&#34;https://bioconductor.org/packages/maftools&#34;&gt;maftools package&lt;/a&gt;
workflow, which starts with a MAF file, can proceed, starting with
reading the melanoma MAF file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;melanoma_vars = read.maf(maf = maffile, verbose = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the data available as a maftools MAF object, a lot of
functionality is available with little code. While the maftools
package offers quite a few functions, here are a few
highlights. Cancer genomics and bioinformatics researchers will
recognize these plots, most likely.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plotmafSummary(maf = melanoma_vars, rmOutlier = TRUE,
               addStat = &amp;#39;median&amp;#39;, dashboard = TRUE,
               titvRaw = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-26-leveraging-bioconductor-for-somatic-variant-analysis-of-tcga-data_files/figure-html/mafsummary-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# exclude a couple of &amp;quot;noise&amp;quot; genes--common practice, unfortunately
oncoplot(maf = melanoma_vars, top = 15, fontSize = 12,
         genes = getGeneSummary(melanoma_vars)$Hugo_Symbol[3:20])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-26-leveraging-bioconductor-for-somatic-variant-analysis-of-tcga-data_files/figure-html/oncoprint-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;braf.lpop = lollipopPlot(maf = melanoma_vars, gene = &amp;#39;BRAF&amp;#39;,
                           AACol = &amp;#39;HGVSp_Short&amp;#39;, showMutationRate = TRUE,
                           domainLabelSize = 3, defaultYaxis = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-26-leveraging-bioconductor-for-somatic-variant-analysis-of-tcga-data_files/figure-html/lollipopPlot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Additional functionality is available for both the GenomicDataCommons
and maftools packages. This post just highlights how one can leverage
two Bioconductor packages to quickly gain insight into public cancer
genomics datasets.&lt;/p&gt;
&lt;div id=&#34;appendix&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Appendix&lt;/h1&gt;
&lt;p&gt;Examining available values in the GDC is straightforward, allowing for
variations on the workflow above.&lt;/p&gt;
&lt;div id=&#34;available-data_types&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Available data_types:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;available_values(&amp;#39;files&amp;#39;,&amp;#39;data_type&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Raw Simple Somatic Mutation&amp;quot;      
##  [2] &amp;quot;Annotated Somatic Mutation&amp;quot;       
##  [3] &amp;quot;Aligned Reads&amp;quot;                    
##  [4] &amp;quot;Gene Expression Quantification&amp;quot;   
##  [5] &amp;quot;Slide Image&amp;quot;                      
##  [6] &amp;quot;Biospecimen Supplement&amp;quot;           
##  [7] &amp;quot;Copy Number Segment&amp;quot;              
##  [8] &amp;quot;Masked Copy Number Segment&amp;quot;       
##  [9] &amp;quot;Clinical Supplement&amp;quot;              
## [10] &amp;quot;Methylation Beta Value&amp;quot;           
## [11] &amp;quot;Isoform Expression Quantification&amp;quot;
## [12] &amp;quot;miRNA Expression Quantification&amp;quot;  
## [13] &amp;quot;Splice Junction Quantification&amp;quot;   
## [14] &amp;quot;Raw CGI Variant&amp;quot;                  
## [15] &amp;quot;Aggregated Somatic Mutation&amp;quot;      
## [16] &amp;quot;Masked Somatic Mutation&amp;quot;          
## [17] &amp;quot;Gene Level Copy Number Scores&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;available-data_formats&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Available data_formats:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;available_values(&amp;#39;files&amp;#39;,&amp;#39;data_format&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;VCF&amp;quot;               &amp;quot;TXT&amp;quot;               &amp;quot;BAM&amp;quot;              
##  [4] &amp;quot;SVS&amp;quot;               &amp;quot;BCR XML&amp;quot;           &amp;quot;BCR SSF XML&amp;quot;      
##  [7] &amp;quot;TSV&amp;quot;               &amp;quot;BCR Auxiliary XML&amp;quot; &amp;quot;BCR OMF XML&amp;quot;      
## [10] &amp;quot;BCR Biotab&amp;quot;        &amp;quot;MAF&amp;quot;               &amp;quot;BCR PPS XML&amp;quot;      
## [13] &amp;quot;XLSX&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;available-analysis-workflows&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Available analysis workflows:&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;available_values(&amp;#39;files&amp;#39;,&amp;#39;analysis.workflow_type&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;DNAcopy&amp;quot;                                      
##  [2] &amp;quot;BCGSC miRNA Profiling&amp;quot;                        
##  [3] &amp;quot;BWA with Mark Duplicates and Cocleaning&amp;quot;      
##  [4] &amp;quot;FM Simple Somatic Mutation&amp;quot;                   
##  [5] &amp;quot;FoundationOne Annotation&amp;quot;                     
##  [6] &amp;quot;HTSeq - Counts&amp;quot;                               
##  [7] &amp;quot;HTSeq - FPKM&amp;quot;                                 
##  [8] &amp;quot;HTSeq - FPKM-UQ&amp;quot;                              
##  [9] &amp;quot;SomaticSniper&amp;quot;                                
## [10] &amp;quot;SomaticSniper Annotation&amp;quot;                     
## [11] &amp;quot;MuTect2&amp;quot;                                      
## [12] &amp;quot;MuTect2 Annotation&amp;quot;                           
## [13] &amp;quot;VarScan2&amp;quot;                                     
## [14] &amp;quot;VarScan2 Annotation&amp;quot;                          
## [15] &amp;quot;MuSE&amp;quot;                                         
## [16] &amp;quot;MuSE Annotation&amp;quot;                              
## [17] &amp;quot;Liftover&amp;quot;                                     
## [18] &amp;quot;BWA-aln&amp;quot;                                      
## [19] &amp;quot;STAR 2-Pass&amp;quot;                                  
## [20] &amp;quot;BWA with Mark Duplicates and BQSR&amp;quot;            
## [21] &amp;quot;STAR - Counts&amp;quot;                                
## [22] &amp;quot;STAR 2-Pass Chimeric&amp;quot;                         
## [23] &amp;quot;STAR 2-Pass Genome&amp;quot;                           
## [24] &amp;quot;STAR 2-Pass Transcriptome&amp;quot;                    
## [25] &amp;quot;Pindel&amp;quot;                                       
## [26] &amp;quot;Pindel Annotation&amp;quot;                            
## [27] &amp;quot;BWA&amp;quot;                                          
## [28] &amp;quot;BWA with BQSR&amp;quot;                                
## [29] &amp;quot;VCF LiftOver&amp;quot;                                 
## [30] &amp;quot;GATK4 MuTect2&amp;quot;                                
## [31] &amp;quot;GATK4 MuTect2 Annotation&amp;quot;                     
## [32] &amp;quot;MuSE Variant Aggregation and Masking&amp;quot;         
## [33] &amp;quot;MuTect2 Variant Aggregation and Masking&amp;quot;      
## [34] &amp;quot;SomaticSniper Variant Aggregation and Masking&amp;quot;
## [35] &amp;quot;VarScan2 Variant Aggregation and Masking&amp;quot;     
## [36] &amp;quot;FoundationOne Variant Aggregation and Masking&amp;quot;
## [37] &amp;quot;GISTIC - Copy Number Score&amp;quot;                   
## [38] &amp;quot;_missing&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
